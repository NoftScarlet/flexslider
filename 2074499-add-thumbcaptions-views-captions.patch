diff --git a/flexslider.admin.inc b/flexslider.admin.inc
index 5f71506..c874fcd 100644
--- a/flexslider.admin.inc
+++ b/flexslider.admin.inc
@@ -202,6 +202,17 @@ function flexslider_option_elements($options = array()) {
       'thumbnails' => t('Thumbnails'),
     )
   );
+  $form['nav_controls']['thumbCaptions'] = array(
+    '#type' => 'checkbox',
+    '#title' => t('Use Thumbnail Captions'),
+    '#description' => t('After selecting this captions will be added to thumbnails and removed from the main slide.'),
+    '#default_value' => isset($options['thumbCaptions']) ? $options['thumbCaptions'] : _flexslider_optionset_defaults('thumbCaptions'),
+    '#states' => array(
+      'visible' => array(
+        ':input[name="controlNav"]' => array('value' => 'thumbnails'),
+      ),
+    ),
+  );
   $form['nav_controls']['keyboard'] = array(
     '#type' => 'checkbox',
     '#title' => t('Keyboard Navigation'),
diff --git a/flexslider.module b/flexslider.module
index 4569279..aa2f44c 100755
--- a/flexslider.module
+++ b/flexslider.module
@@ -467,6 +467,7 @@ function _flexslider_optionset_defaults($key = NULL) {
     'pauseText' => t('Pause'),
     'playText' => t('Play'),
     'randomize' => FALSE,
+    'thumbCaptions' => FALSE,
     //'slidetostart' => 0, // integer value, not boolean --  replace by "startAt"
     'animationLoop' => TRUE,
     'pauseOnAction' => TRUE,
@@ -541,6 +542,7 @@ function _flexslider_typecast_optionset(&$options) {
         case 'directionNav':
         case 'pausePlay':
         case 'randomize':
+        case 'thumbCaptions':
         case 'animationLoop':
         case 'pauseOnAction':
         case 'pauseOnHover':
diff --git a/flexslider_views/flexslider_views_plugin_style_flexslider.inc b/flexslider_views/flexslider_views_plugin_style_flexslider.inc
index 1119928..65fbf27 100755
--- a/flexslider_views/flexslider_views_plugin_style_flexslider.inc
+++ b/flexslider_views/flexslider_views_plugin_style_flexslider.inc
@@ -14,9 +14,9 @@ class flexslider_views_plugin_style_flexslider extends views_plugin_style {
    */
   function option_definition() {
     $options = parent::option_definition();
-
     $options += array(
       'optionset' => array('default' => 'default'),
+      'captionfield' => array('default' => ''),
       'id' => array('default' => ''),
     );
 
@@ -50,6 +50,19 @@ class flexslider_views_plugin_style_flexslider extends views_plugin_style {
       $link_options[$field] = $handler->ui_name();
     }
 
+    $captionfield_options = array('' => t('None'));
+    foreach ($this->view->display_handler->get_handlers('field') as $field => $handler) {
+      $captionfield_options[$field] = $handler->ui_name();
+    }
+
+    $form['flexslider']['captionfield'] = array(
+      '#type' => 'select',
+      '#title' => t('Caption Field'),
+      '#description' => t("If set this will populate the caption with the content of the chosen field"),
+      '#options' => $captionfield_options,
+      '#default_value' => $this->options['captionfield'],
+    );
+
     $form['flexslider']['id'] = array(
       '#type' => 'textfield',
       '#title' => t('Element ID'),
@@ -67,7 +80,7 @@ class flexslider_views_plugin_style_flexslider extends views_plugin_style {
     $options =& $form_state['values']['style_options'];
 
     // Pull the fieldset values one level up
-    $options += $options['flexslider'];
+    $options += $options['flexslider'];
     unset($options['flexslider']);
   }
 
@@ -81,14 +94,23 @@ class flexslider_views_plugin_style_flexslider extends views_plugin_style {
 
     // Render each group separately and concatenate.
     $output = '';
+
     foreach ($sets as $title => $rows) {
+      // Add caption field if chosen.
+      if (!empty($this->options['captionfield'])) {
+        $caption_field = $this->options['captionfield'];
+        foreach ($rows as $index => $row) {
+          $rows[$index]->caption = $this->rendered_fields[$index][$caption_field];
+        }
+      }
       $output .= theme($this->theme_functions(),
         array(
           'view' => $this->view,
           'options' => $this->options,
           'rows' => $rows,
-          'title' => $title)
-        );
+          'title' => $title
+        )
+      );
     }
 
     return $output;
diff --git a/flexslider_views/theme/flexslider_views.theme.inc b/flexslider_views/theme/flexslider_views.theme.inc
index 96b7082..45d2b1f 100644
--- a/flexslider_views/theme/flexslider_views.theme.inc
+++ b/flexslider_views/theme/flexslider_views.theme.inc
@@ -25,7 +25,7 @@ function template_process_flexslider_views(&$vars) {
       // Render the row into a slide
       $view->row_index = $id;
       $item['slide'] = $row_plugin->render($row);
-
+      $item['caption'] = (isset($row->caption) && !empty($row->caption)) ? $row->caption : NULL;
       $items[] = $item;
     }
 
@@ -39,4 +39,4 @@ function template_process_flexslider_views(&$vars) {
     $vars['settings'] = $settings;
   }
   return $vars;
-}
\ No newline at end of file
+}
diff --git a/theme/flexslider.theme.inc b/theme/flexslider.theme.inc
index ebb7c93..3caad1d 100755
--- a/theme/flexslider.theme.inc
+++ b/theme/flexslider.theme.inc
@@ -145,7 +145,12 @@ function template_process_flexslider_list_item(&$vars) {
     }
   }
 
-  if (!empty($caption)) {
+  if (($settings['optionset']->options['thumbCaptions']) && !empty($caption)) {
+    $attributes['data-thumbcaption'] = $caption;
+    // remove the caption so that it doesn't show in both places
+    $caption = '';
+  }
+  elseif (!empty($caption)) {
     $caption = '<p class="flex-caption">' . $caption . '</p>';
   }
 }
